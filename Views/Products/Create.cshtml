@model SuperbrainManagement.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <input type="file" name="imageFile" id="imageFile" class="form-control" />
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group mt-2 col-md-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-4">
            @Html.LabelFor(model => model.StatusDiscount, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.StatusDiscount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StatusDiscount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.IdCategory, "IdCategory", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.DropDownList("IdCategory", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.IsCore, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsCore, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.Quota, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Quota, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quota, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.NumberOfPackage, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.NumberOfPackage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfPackage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.UnitOfPackage, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.UnitOfPackage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitOfPackage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.IsFixed, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFixed, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsFixed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group mt-2 col-md-6">
            @Html.LabelFor(model => model.IsSale, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsSale, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group mt-2 col-md-12">
            @Html.LabelFor(model => model.PowerScore, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.PowerScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PowerScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-2 col-md-12">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Thêm mới" class="btn btn-md btn-success" />
            </div>
        </div>
    </div>
}
