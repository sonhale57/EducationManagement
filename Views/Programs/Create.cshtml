@model SuperbrainManagement.Models.Program

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.IsTest, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsTest, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsTest, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6 mt-2">
            @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-12">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Enable, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group col-md-6 mt-2">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Thêm mới" class="btn btn-success" />
            </div>
        </div>
    </div>
}