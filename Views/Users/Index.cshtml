@model PagedList.IPagedList<SuperbrainManagement.Models.User>
@using PagedList.Mvc;
@{
    ViewBag.Controller = "Nhân sự";
    ViewBag.Title = "Quản lý tài khoản";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int stt = 1;
}
<div class="row">
    <div class="col col-md-5 col-sm-12">
        <form action="/users" method="get" id="formload">
            <div class="input-group mb-3">
                @if (SuperbrainManagement.Controllers.CheckUsers.CheckHQ())
                {
                    @Html.DropDownList("IdBranch", null, htmlAttributes: new { @class = "form-control select2" })
                }
                <input type="text" class="form-control ms-1 rounded-1" name="searchString" placeholder="Tìm kiếm" value="@ViewBag.CurrentFilter">
                <button class="input-group-text bg-success ms-1 rounded-1" id="basic-addon2" type="submit"><i class="ti ti-search text-white"></i></button>
            </div>
        </form>
    </div>
    <div class="col col-md-7 col-sm-12 text-end">
    </div>
</div>

<table class="table fs-3">
    <thead class="bg-success text-white rounded-1">
        <tr>
            <th class="text-center">STT</th>
            <th class="text-left">Tên hiển thị</th>
            <th class="text-left">Tên đăng nhập</th>
            <th class="text-center">Vị trí</th>
            <th class="text-center">Ngày tạo</th>
            <th class="text-center">Ngày hết hạn</th>
            <th class="text-center">Trạng thái</th>
            <th class="text-end">Thao tác</th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tr>
            <td class="text-center">
                @stt
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td class="text-center">
                @(item.Employee.IdPosition==null?"-":item.Employee.Position.Name)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.DateCreate)
            </td>
            <td class="text-center">
                @if (item.Expire > DateTime.Now)
                {
                    @Html.DisplayFor(modelItem => item.Expire)
                }
                else
                {
                    <span class="text-danger">Đã hết hạn</span>
                }
            </td>
            <td class="text-center">
                @if (item.Active != null && item.Active == true)
                {
                    <label class="custom-control ios-switch">
                        <input type="checkbox" class="ios-switch-control-input" onchange="javascript: ChangeStatus(this)" data-id="@item.Id" value="0" checked>
                        <span class="ios-switch-control-indicator"></span>
                    </label>
                }
                else
                {
                    <label class="custom-control ios-switch">
                        <input type="checkbox" class="ios-switch-control-input" onchange="javascript: ChangeStatus(this)" data-id="@item.Id" value="1">
                        <span class="ios-switch-control-indicator"></span>
                    </label>
                }
            </td>
            <td class="text-end">
                <a href="javascript:Edit_Account(@item.Id)" class="me-1"><i class="ti ti-edit text-primary"></i></a>
                <a href="javascript:Delete_Account(@item.Id)" class="me-1"><i class="ti ti-trash text-danger"></i></a>
                <a class="text-warning" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="ti ti-dots-vertical"></i>
                </a>
                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    @if (SuperbrainManagement.Controllers.CheckUsers.CheckHQ())
                    {
                        if (item.Expire <= DateTime.Now)
                        {
                            <li><a href="javascript:Extend_Account(@item.Id)" class="dropdown-item"><i class="ti ti-shield-check"></i> Gia hạn</a></li>
                        }
                    }
                    <li><button type="button" class="confirmButton dropdown-item" onclick="getDataPermission(@item.Id)" data-bs-toggle="modal" data-bs-target="#exampleModal"><i class="ti ti-lock-access"></i> Phân quyền</button></li>
                </ul>
            </td>
        </tr>
        stt += 1;
    }
</table>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions { LiElementClasses = new string[] { "page-item" } })
    </ul>
</nav>
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width:800px;">
            <div class="modal-header">
                <h5 class="modal-fullscreen" id="editModalLabel">Chỉnh sửa tài khoản</h5>
                <button type="button" class="btn btn-sm" onclick="closeModal()" data-dismiss="modal" aria-label="Close">
                    <i class="ti ti-x"></i>
                </button>
            </div>
            <hr style="width:90%;margin:0 auto;" />
            <form action="/" method="post" id="form_nhap">
                <div class="modal-body">
                    <div class="row">
                        <div class="col col-md-12">
                            <label>Họ tên</label>
                            <input type="hidden" id="IdUser" value="" class="form-control" />
                            <input type="text" id="EditName" value="" class="form-control" disabled />
                        </div>
                        <div class="col col-md-12 mt-3">
                            <label>Tên đăng nhập</label>
                            <input type="text" id="EditUsername" value="" class="form-control" disabled />
                        </div>
                        <div class="col col-md-12 mt-3">
                            <label>Mật khẩu mới</label>
                            <input type="password" id="EditPassword" value="" class="form-control" required />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-outline-danger text-center" onclick="closeModal()">
                        <i class="ti ti-door-exit"></i> Hủy
                    </button>
                    <button type="button" class="btn btn-success btn-sm" onclick="Submit_edituser()" id="btnAction">
                        <i class="ti ti-device-floppy"></i> Cập nhật
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable h-75" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-fullscreen" id="exampleModalLabel">Phân quyền tài khoản</h5>
            </div>
            <hr style="width:90%;margin:0 auto;" />
            <div class="modal-body">
                <form id="vehicleForm">
                    <table cellpadding="0" cellspacing="0" border="0" class="table table-bordered" id="datatable">
                        <thead class="bg-success text-white">
                            <tr>
                                <th class="head0">CHỨC NĂNG</th>
                                <th class="head0 text-center"><i>Xem</i></th>
                                <th class="head0 text-center"><i>Thêm</i></th>
                                <th class="head0 text-center"><i>Sửa</i></th>
                                <th class="head0 text-center"><i>Xóa</i></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-sm btn-outline-danger" data-dismiss="modal" onclick="closeModal()"><i class="ti ti-door-exit"></i> hủy</button>
                <button type="submit" id="submitButton" value="Submit" onclick="saveChange()" class="btn btn-sm btn-success" data-dismiss="modal"><i class="ti ti-refresh"></i> Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>
@section Scripts
 {
    <script>

        function Edit_Account(id) {
            $('#EditName').val("");
            $('#EditUsername').val("");
            $.ajax({
                url: '@Url.Action("Load_infoEdit", "Users")',
                type: "GET",
                data: {
                    id:id
                },
                success: function (data) {
                    $('#IdUser').val(id);
                    $('#EditName').val(data.name);
                    $('#EditUsername').val(data.username);
                    $('#editModal').modal('show');
                },
                error: function (xhr, error) {
                    console.log(error);
                }
            });
        }
        function Submit_edituser() {
        $.ajax({
            url: '@Url.Action("Submit_EditUser", "Users")',
            type: "POST",
            data: {
                Id: $("#IdUser").val(),
                Password: $("#EditPassword").val()
            }
            , dataType: "json",
            success: function (data) {
                if (data.status == "ok") {
                    $('#editModal').modal('hide');
                    showSuccess(data.message, 3000);
                }
                else {
                    showError(data.message, 3000);
                }
            },
            error: function () { showError('Lỗi!', 3000); }
        });
    }

    function updateCheckboxValue(checkbox) {
        var value = checkbox.checked ? 1 : 0;
        checkbox.value = value;
    }
    function getDataPermission(idInput) {
        $('#datatable tbody').empty();
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetDataPermissionWithid", "Users")',
            data: { idInput: idInput },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log(response);
                $('#datatable tbody').empty();
                var table = $('#datatable tbody');
                response.forEach(function (role) {
                    var row = $('<tr>');
                    row.append('<td class="text-success" colspan=5><i class="ti ti-barcode"></i> <b>' + role.Name + '</b></td>');

                    table.append(row);

                    role.Permissions.forEach(function (permission) {
                    var permissionRow = $('<tr class="permission">');
                        permissionRow.append('<td><b>+ ' + permission.Name + '</b><div class="blur_color"><i class="ti ti-corner-down-right"></i>' + permission.code + '</div><input class="IdPermission" hidden type="number" value="' + permission.id + '"></td>');

                        var isReadCheckbox = '<td class="text-center"><input class="IsRead" type="checkbox" onchange="updateCheckboxValue(this) "' + (permission.IsRead ? ' checked' : '') + ' value="' + (permission.IsRead ? '1' : '0') + '"></td>';
                        var isCreateCheckbox = '<td class="text-center"><input class="IsCreate" type="checkbox" onchange="updateCheckboxValue(this)"' + (permission.IsCreate ? ' checked' : '') + ' value="' + (permission.IsCreate ? '1' : '0') + '"></td>';
                        var isEditCheckbox = '<td class="text-center"><input class="IsEdit" type="checkbox" onchange="updateCheckboxValue(this) "' + (permission.IsEdit ? ' checked' : '') + ' value="' + (permission.IsEdit ? '1' : '0') + '"></td>';
                        var isDeleteCheckbox = '<td class="text-center"><input class="IsDelete" type="checkbox" onchange="updateCheckboxValue(this) "' + (permission.IsDelete ? ' checked' : '') + ' value="' + (permission.IsDelete ? '1' : '0') + '"></td>';

                    permissionRow.append(isReadCheckbox);
                    permissionRow.append(isCreateCheckbox);
                    permissionRow.append(isEditCheckbox);
                    permissionRow.append(isDeleteCheckbox);
                    table.append(permissionRow);
                    });
                });
            },
            error: function (xhr, status, error) {
                showError("Lỗi cập nhật!", 3000);
                $('#datatable tbody').empty();
            }
        });
    }

    $("#submitButton").click(function (e) {
            e.preventDefault(); // Prevent form submission
            var Permissions = [];

            $(".permission").each(function () {
                var permission = {
                    IdPermission: $(this).find(".IdPermission").val(),
                    IsRead: $(this).find(".IsRead").val(),
                    IsCreate: $(this).find(".IsCreate").val(),
                    IsEdit: $(this).find(".IsEdit").val(),
                    IsDelete: $(this).find(".IsDelete").val()
                };
                Permissions.push(permission);
            });

            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveChange", "Users")', // Replace with your controller's action method URL
                data: JSON.stringify(Permissions),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.str == "ok") {
                        $('#exampleModal').modal('hide');
                        showSuccess("Cập nhật thành công!", 3000);
                    }
                },
                error: function (xhr, status, error) {
                    // Handle errors here
                    console.error("Error submitting data to the controller:", status, error);
                }
            });
    });

        function ChangeStatus(button) {
            var id = parseInt(button.getAttribute("data-id")); // Chuyển đổi id thành một số nguyên
            var status = button.value; // Sử dụng button.value thay vì lấy từ tất cả các button
            $.ajax({
                type: "POST",
                url: '/Users/updateStatus',
                data: JSON.stringify({ id: id, status: status }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    showSuccess("Cập nhật thành công!", 3000);
                },
                error: function (xhr, status, error) {
                    showError("Lỗi cập nhật!", 3000);
                }
            });
        }
        function Delete_Account(Id) {
            if (confirm('Bạn có muốn xóa tài khoản này?')) {
                $.ajax({
                    url: '@Url.Action("Delete_Account", "Users")',
                    type: 'POST',
                    data: {
                        id: Id
                    },
                    success: function (data) {
                        if (data.status == "ok") {
                            showSuccess(data.message, 3000);
                            location.reload();
                        } else {
                            showError(data.message, 3000);
                        }
                    },
                    error: function () {
                        showError('Error deleting user', 3000);
                    }
                });
            }
        }
        function Extend_Account(Id) {
            if (confirm('Bạn có muốn gia hạn tài khoản này?')) {
                $.ajax({
                    url: '@Url.Action("Extend_Account", "Users")',
                    type: 'POST',
                    data: {
                        id: Id
                    },
                    success: function (data) {
                        if (data.status == "ok") {
                            showSuccess(data.message, 3000);
                            location.reload();
                        } else {
                            showError(data.message, 3000);
                        }
                    },
                    error: function () {
                        showError('Error deleting user', 3000);
                    }
                });
            }
        }
    </script>
}

